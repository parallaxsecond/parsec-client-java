<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <groupId>org.parallaxsecond</groupId>
    <artifactId>parsec-java</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <distributionManagement>
        <repository>
            <id>github</id>            <!-- MUST match the server-id in the workflow -->
            <name>GitHub Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/parallaxsecond/parsec-client-java</url>            <!-- Replace OWNER/REPOSITORY -->
        </repository>
    </distributionManagement>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logback.version>1.3.15</logback.version>
        <lombok.version>1.18.36</lombok.version>
        <junit.jupiter.version>5.12.1</junit.jupiter.version>
        <slf4j.version>2.0.16</slf4j.version>
        <jpms.args></jpms.args>
        <!-- Since compiler plugin version 3.13.0 you can use the release property also on JDK 8. 
             The compiler plugin will convert it to source and target automatically. -->
        <maven.compiler.release>8</maven.compiler.release>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.15.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <modules>
        <module>parsec-testcontainers</module>
        <module>parsec-protobuf-java</module>
        <module>parsec-interface-java</module>
        <module>parsec-client-java</module>
        <module>parsec-jca-java</module>
        <module>parsec-jca-java-test</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.7</version>
                <executions>
                    <execution>
                        <id>flatten-pom</id>
                        <phase>package</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <flattenMode>clean</flattenMode>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
            </plugin>
        </plugins>
    </build>
</project>
